{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jthao007\\\\Desktop\\\\uofm-bc\\\\Homework\\\\Homework\\\\21-MERN\\\\02-Homework\\\\goo-search-for-books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jthao007\\\\Desktop\\\\uofm-bc\\\\Homework\\\\Homework\\\\21-MERN\\\\02-Homework\\\\goo-search-for-books\\\\client\\\\src\\\\pages\\\\Books.js\";\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1]; // const [formObject, setFormObject] = useState({})\n\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInput = _useState4[0],\n      setuserInput = _useState4[1]; // Load all books and store them with setBooks\n\n\n  useEffect(function () {\n    loadBooks();\n  }, []);\n\n  function getGoogleBooks() {//get userinput\n    //call utils=>findBooks(userinput)\n    //.then(function(data){\n    //   console.log(data)\n    // })\n  } //you need to create an onsubmit=> call get GoogleBooks\n\n\n  var handleInputChange = function handleInputChange(event) {\n    var value = event.target.value;\n    setuserInput(value);\n  };\n\n  function saveBook(id) {\n    //run a for loop and check against your array of books.. if the id matches, you found it and grab the object wit the title, img, author\n    books.map(function (currentbooks) {\n      if (currentbooks.id === id) {\n        return;\n      }\n    }); //store into obj\n    //API.saveBook(obj)\n  }\n\n  var handleFormSubmit = function handleFormSubmit(event) {\n    event.preventDefault();\n    API.findBook(userInput).then(function (res) {\n      return setBooks(res.data.items);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }; // Loads all books and sets them to books\n\n\n  function loadBooks() {\n    API.getBooks().then(function (res) {\n      return setBooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Book Search\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"bookSearch\",\n    value: userInput,\n    onChange: handleInputChange,\n    placeholder: \"Search For a Book by title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"Submit Book\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, books.map(function (currentbooks) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: currentbooks.id,\n      style: {\n        marginLeft: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, currentbooks.volumeInfo.title, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn saveBtn\",\n      onClick: saveBook(currentbooks.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 20\n      }\n    }, currentbooks.volumeInfo.authors), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, currentbooks.volumeInfo.description)));\n  })))));\n}\n\nexport default Books;","map":{"version":3,"sources":["C:/Users/jthao007/Desktop/uofm-bc/Homework/Homework/21-MERN/02-Homework/goo-search-for-books/client/src/pages/Books.js"],"names":["React","useEffect","useState","API","Col","Row","Container","Input","FormBtn","Books","books","setBooks","userInput","setuserInput","loadBooks","getGoogleBooks","handleInputChange","event","value","target","saveBook","id","map","currentbooks","handleFormSubmit","preventDefault","findBook","then","res","data","items","catch","err","console","log","getBooks","marginLeft","volumeInfo","title","authors","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([])\n  // const [formObject, setFormObject] = useState({})\n  const [userInput, setuserInput] = useState(\"\");\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n  function getGoogleBooks() {\n    //get userinput\n    //call utils=>findBooks(userinput)\n    //.then(function(data){\n    //   console.log(data)\n    // })\n  }\n\n  //you need to create an onsubmit=> call get GoogleBooks\n\n  const handleInputChange = event => {\n    const { value } = event.target;\n    setuserInput(value);\n  };\n\n function saveBook(id){\n   //run a for loop and check against your array of books.. if the id matches, you found it and grab the object wit the title, img, author\n   books.map((currentbooks) => {\n     if (currentbooks.id === id) {\n       return \n     }\n   })\n   //store into obj\n   //API.saveBook(obj)\n\n  }\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    API.findBook(userInput)\n      .then(res => setBooks(res.data.items))\n      .catch(err => console.log(err));\n  };\n\n  // Loads all books and sets them to books\n  function loadBooks() {\n    API.getBooks()\n      .then(res => \n        setBooks(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md\">\n            <form>\n              <h4>Book Search</h4>\n              <Input\n                name=\"bookSearch\"\n                value={userInput}\n                onChange={handleInputChange}\n                placeholder=\"Search For a Book by title\"\n              \n              />\n              <FormBtn\n                onClick={handleFormSubmit}\n              >\n                Submit Book\n              </FormBtn>\n\n            </form>\n\n            <div>\n              {books.map((currentbooks) => (\n              <tr key={currentbooks.id} style={{marginLeft: 5}}>\n                <th scope=\"row\">\n                </th>\n                {/* <td><img alt={currentbooks.volumeInfo.title} src={currentbooks.volumeInfo.imageLinks.thumbnail} style={{paddingTop: 20}}/></td> */}\n                <td >\n                  {currentbooks.volumeInfo.title}\n                  <button className=\"btn saveBtn\"\n                   onClick={saveBook(currentbooks.id)}\n                  >Save</button>\n                   <tr>{currentbooks.volumeInfo.authors}</tr>\n              \n              <tr>{currentbooks.volumeInfo.description}</tr>\n                </td>\n              </tr>\n              ))}</div>\n\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}